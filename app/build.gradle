buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.25.4'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion 27
    flavorDimensions "default"
    signingConfigs {
        debug {
            storeFile file('.android/debug.keystore')
        }
        release {
            File fileConfig = file('.android/keystore.properties')
            Properties properties = new Properties()
            properties.load(new FileInputStream(fileConfig))
            storeFile file('.android/release.keystore')
            storePassword properties['storePassword']
            keyAlias properties['keyAlias']
            keyPassword properties['keyPassword']
        }
    }

    defaultConfig {
        applicationId "vn.nms.photo.app"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 10000
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    productFlavors {
        staging {
            signingConfig signingConfigs.debug
            buildConfigField "String", "HOST", (project.findProperty("STAGING_API") ?: "")
        }
        production {
            signingConfig signingConfigs.release
            buildConfigField "String", "HOST", (project.findProperty("PRODUCTION_API") ?: "")
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    android.applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.outputs.all {
                def appName = "HueHui"
                def buildType = variant.buildType.name
                def versionCode = variant.versionCode
                def versionName = variant.versionName
                def flavorName = variant.productFlavors[0].name
                outputFileName = "[" + "Build_" + versionCode + "]" + "[" + flavorName + "]" +
                        "[" + buildType + "]" + appName + "_" + versionName + ".apk"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:animated-vector-drawable:$supportLibVersion"
    implementation "com.android.support:exifinterface:$supportLibVersion"
    implementation "com.android.support:cardview-v7:$supportLibVersion"

    implementation "com.squareup.retrofit2:retrofit:$retrofitLibVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitLibVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitLibVersion"

    implementation "com.jakewharton.timber:timber:$timberLibVersion"
    debugImplementation "com.readystatesoftware.chuck:library:$chuckLibVersion"
    releaseImplementation "com.readystatesoftware.chuck:library-no-op:$chuckLibVersion"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryLibVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryLibVersion"
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$leakCanaryLibVersion"

    implementation "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"
    implementation "com.jakewharton.rxbinding2:rxbinding:$rxBindingVersion"

    implementation "org.parceler:parceler-api:$parcelerVersion"
    annotationProcessor "org.parceler:parceler:$parcelerVersion"

    implementation "com.squareup.picasso:picasso:$picassoVersion"

    api "frankiesardo:icepick:$icePickVersion"
    compileOnly "frankiesardo:icepick-processor:$icePickVersion"
    annotationProcessor "frankiesardo:icepick-processor:$icePickVersion"

    implementation "me.grantland:autofittextview:$autoFitVersion"
    implementation "com.scottyab:secure-preferences-lib:$securePrefVersion"
    implementation("com.crashlytics.sdk.android:crashlytics:$fabricVersion") {
        transitive = true
    }

    implementation "de.hdodenhof:circleimageview:$circleImageVersion"
    implementation "com.github.tbruyelle:rxpermissions:$rxPermissionVersion"
    implementation "ru.rambler.android:swipe-layout:$swipeLayoutVersion"

    implementation "android.arch.persistence.room:runtime:$room_version"
    annotationProcessor "android.arch.persistence.room:compiler:$room_version"
    implementation "android.arch.persistence.room:rxjava2:$room_version"

    implementation "jp.wasabeef:picasso-transformations:$picassoTransformVersion"
    implementation "com.github.chrisbanes:PhotoView:$photoViewVersion"
    implementation "com.android.support:multidex:$multidexVersion"
    implementation "com.google.firebase:firebase-ads:$adMobVersion"
}

